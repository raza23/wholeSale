{"ast":null,"code":"var _jsxFileName = \"/Users/razashareef/Documents/Post_Grad/pillTaps_app/frontend_pilltabs/reg_react/src/Survey.js\";\nimport React, { Component } from \"react\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport SurveyEdit from \"./SurveyEdit\"; // import ToggleButton from \"react-bootstrap/ToggleButton\";\n\nclass Survey extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false\n    };\n\n    this.saveEditSurvey = (editAnswer1, editAnswer2) => {\n      const answers = {\n        answer1: editAnswer1,\n        answer2: editAnswer2,\n        user: this.props.user\n      };\n      debugger;\n      fetch(`http://localhost:3001/users/1`, {\n        method: \"PATCH\",\n        header: {\n          Authorization: `Bearer ${localStorage.jwt}`,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          answers\n        })\n      }).then(res => res.json()).then(console.log);\n    };\n\n    this.handleSurvey = () => {\n      console.log(\"hey\");\n      this.setState(state => ({\n        edit: !state.edit\n      }));\n    };\n  }\n\n  render() {\n    const user = this.props.user; // debugger;\n    // * user isnt null, it just needs to wait for the user to fetch\n\n    console.log(user);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", \"Question 1\", /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButtonGroup, {\n      name: \"question1\",\n      type: \"radio\",\n      defaultValue: user.answer1,\n      className: \"mb-2\",\n      variant: \"dark\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Checkbox 1\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Checkbox 2*\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Checkbox 3\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Checkbox 4\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Checkbox 5\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(React.Fragment, null, \" \", \"Question 2\", /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButtonGroup, {\n      name: \"question1\",\n      type: \"radio\",\n      defaultValue: user.answer2,\n      className: \"mb-2\",\n      variant: \"dark\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Checkbox 1\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Checkbox 2\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Checkbox 3\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Checkbox 4\"), /*#__PURE__*/React.createElement(ReactBootstrap.ToggleButton, {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Checkbox 5*\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"ui positive button,ui huge button\",\n      onClick: this.handleSurvey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Edit\"), this.state.edit ? /*#__PURE__*/React.createElement(SurveyEdit // log={this.props}\n    , {\n      saveEdit: this.saveEditSurvey,\n      user: this.props.user // logid={this.props.id}\n      ,\n      handleSurvey: this.handleSurvey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n} // another type of button\n//   <div>\n//     hi\n//     <ReactBootstrap.ButtonToolbar\n//       className=\"mb-3\"\n//       aria-label=\"Toolbar with Button groups\"\n//     >\n//       <ReactBootstrap.ButtonGroup\n//         className=\"mr-2\"\n//         aria-label=\"First group\"\n//       >\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           1\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           2\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           3\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           4\n//         </ReactBootstrap.Button>\n//       </ReactBootstrap.ButtonGroup>\n//     </ReactBootstrap.ButtonToolbar>\n//   </div>\n\n\nexport default withRouter(Survey);","map":{"version":3,"sources":["/Users/razashareef/Documents/Post_Grad/pillTaps_app/frontend_pilltabs/reg_react/src/Survey.js"],"names":["React","Component","ReactBootstrap","withRouter","SurveyEdit","Survey","state","edit","saveEditSurvey","editAnswer1","editAnswer2","answers","answer1","answer2","user","props","fetch","method","header","Authorization","localStorage","jwt","Accept","body","JSON","stringify","then","res","json","console","log","handleSurvey","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport SurveyEdit from \"./SurveyEdit\";\n// import ToggleButton from \"react-bootstrap/ToggleButton\";\n\nclass Survey extends Component {\n  state = {\n    edit: false\n  };\n\n  saveEditSurvey = (editAnswer1, editAnswer2) => {\n    const answers = {\n      answer1: editAnswer1,\n      answer2: editAnswer2,\n\n      user: this.props.user\n    };\n    debugger;\n    fetch(`http://localhost:3001/users/1`, {\n      method: \"PATCH\",\n      header: {\n        Authorization: `Bearer ${localStorage.jwt}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({ answers })\n    })\n      .then(res => res.json())\n      .then(console.log);\n  };\n\n  handleSurvey = () => {\n    console.log(\"hey\");\n    this.setState(state => ({\n      edit: !state.edit\n    }));\n  };\n\n  render() {\n    const user = this.props.user;\n    // debugger;\n    // * user isnt null, it just needs to wait for the user to fetch\n    console.log(user);\n    return (\n      <div>\n        <>\n          {\" \"}\n          Question 1\n          <ReactBootstrap.ToggleButtonGroup\n            name=\"question1\"\n            type=\"radio\"\n            defaultValue={user.answer1}\n            className=\"mb-2\"\n            variant=\"dark\"\n            size=\"sm\"\n          >\n            <ReactBootstrap.ToggleButton value={1}>\n              Checkbox 1\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={2}>\n              Checkbox 2*\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={3}>\n              Checkbox 3\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={4}>\n              Checkbox 4\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={5}>\n              Checkbox 5\n            </ReactBootstrap.ToggleButton>\n          </ReactBootstrap.ToggleButtonGroup>\n          <br />\n        </>\n        <>\n          {\" \"}\n          Question 2\n          <ReactBootstrap.ToggleButtonGroup\n            name=\"question1\"\n            type=\"radio\"\n            defaultValue={user.answer2}\n            className=\"mb-2\"\n            variant=\"dark\"\n            size=\"sm\"\n          >\n            <ReactBootstrap.ToggleButton value={1}>\n              Checkbox 1\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={2}>\n              Checkbox 2\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={3}>\n              Checkbox 3\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={4}>\n              Checkbox 4\n            </ReactBootstrap.ToggleButton>\n            <ReactBootstrap.ToggleButton value={5}>\n              Checkbox 5*\n            </ReactBootstrap.ToggleButton>\n          </ReactBootstrap.ToggleButtonGroup>\n          <br />\n        </>\n        <button\n          class=\"ui positive button,ui huge button\"\n          onClick={this.handleSurvey}\n        >\n          Edit\n        </button>\n        {this.state.edit ? (\n          <SurveyEdit\n            // log={this.props}\n            saveEdit={this.saveEditSurvey}\n            user={this.props.user}\n            // logid={this.props.id}\n            handleSurvey={this.handleSurvey}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\n// another type of button\n//   <div>\n//     hi\n//     <ReactBootstrap.ButtonToolbar\n//       className=\"mb-3\"\n//       aria-label=\"Toolbar with Button groups\"\n//     >\n//       <ReactBootstrap.ButtonGroup\n//         className=\"mr-2\"\n//         aria-label=\"First group\"\n//       >\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           1\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           2\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           3\n//         </ReactBootstrap.Button>{\" \"}\n//         <ReactBootstrap.Button variant=\"secondary\">\n//           4\n//         </ReactBootstrap.Button>\n//       </ReactBootstrap.ButtonGroup>\n//     </ReactBootstrap.ButtonToolbar>\n\n//   </div>\n\nexport default withRouter(Survey);\n"]},"metadata":{},"sourceType":"module"}