{"ast":null,"code":"var _jsxFileName = \"/Users/razashareef/Documents/Post_Grad/pillTaps_app/frontend_pilltabs/reg_react/src/DrugDetail.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nconst Orders_URL = \"http://localhost:3001/orders\";\n\nclass DrugDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: this.props.orders,\n      order_type_cost: \"0\",\n      cost: parseInt(this.state.order_type_cost)\n    };\n\n    this.makeOrder = () => {\n      console.log(\"click\");\n      const newOrder = {\n        user: this.props.user,\n        drug: this.props.drug,\n        order_type: this.state.order_type_cost,\n        cost: parseInt(this.state.order_type_cost) // *this data is what gooes to DB, need to get the data from frontend to populate\n\n      };\n    };\n\n    this.handleOrder = e => {\n      this.setState({\n        order_type_cost: e.currentTarget.innerText\n      }); // debugger;\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n\n    if (!this.props.drug) {\n      return /*#__PURE__*/React.createElement(ReactBootstrap.Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Loading...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.props.drug.name), /*#__PURE__*/React.createElement(ReactBootstrap.Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactBootstrap.Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Order Type\"), /*#__PURE__*/React.createElement(ReactBootstrap.Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactBootstrap.Dropdown.Item, {\n      onClick: this.handleOrder,\n      href: \"#/action-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"One Time for $5\"), /*#__PURE__*/React.createElement(ReactBootstrap.Dropdown.Item, {\n      href: \"#/action-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Subscription for $10\"))), /*#__PURE__*/React.createElement(ReactBootstrap.Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Confirm Order\"), \" \");\n  }\n\n}\n\nexport default withRouter(DrugDetail);","map":{"version":3,"sources":["/Users/razashareef/Documents/Post_Grad/pillTaps_app/frontend_pilltabs/reg_react/src/DrugDetail.js"],"names":["React","Component","withRouter","ReactBootstrap","Orders_URL","DrugDetail","state","orders","props","order_type_cost","cost","parseInt","makeOrder","console","log","newOrder","user","drug","order_type","handleOrder","e","setState","currentTarget","innerText","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AAEA,MAAMC,UAAU,GAAG,8BAAnB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MADb;AAENE,MAAAA,eAAe,EAAE,GAFX;AAGNC,MAAAA,IAAI,EAAEC,QAAQ,CAAC,KAAKL,KAAL,CAAWG,eAAZ;AAHR,KADyB;;AAAA,SAOjCG,SAPiC,GAOrB,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMC,QAAQ,GAAG;AACfC,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,IADF;AAEfC,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IAFF;AAGfC,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWG,eAHR;AAIfC,QAAAA,IAAI,EAAEC,QAAQ,CAAC,KAAKL,KAAL,CAAWG,eAAZ,CAJC,CAKf;;AALe,OAAjB;AAOD,KAhBgC;;AAAA,SAkBjCU,WAlBiC,GAkBnBC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,eAAe,EAAEW,CAAC,CAACE,aAAF,CAAgBC;AAAnC,OAAd,EADiB,CAEjB;AACD,KArBgC;AAAA;;AAuBjCC,EAAAA,MAAM,GAAG;AACPX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;;AACA,QAAI,CAAC,KAAKE,KAAL,CAAWS,IAAhB,EAAsB;AACpB,0BACE,oBAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,SAAS,EAAC,QAAlC;AAA2C,QAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWS,IAAX,CAAgBQ,IAApB,CADF,eAEE,oBAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CAAgB,QAAhB,CAAyB,MAAzB;AAAgC,MAAA,OAAO,EAAC,SAAxC;AAAkD,MAAA,EAAE,EAAC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,oBAAC,cAAD,CAAgB,QAAhB,CAAyB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CAAgB,QAAhB,CAAyB,IAAzB;AACE,MAAA,OAAO,EAAE,KAAKN,WADhB;AAEE,MAAA,IAAI,EAAC,YAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAOE,oBAAC,cAAD,CAAgB,QAAhB,CAAyB,IAAzB;AAA8B,MAAA,IAAI,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPF,CALF,CAFF,eAmBE,oBAAC,cAAD,CAAgB,MAAhB;AAAuB,MAAA,OAAO,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBF,EAqB2B,GArB3B,CADF;AAyBD;;AA3DgC;;AA8DnC,eAAejB,UAAU,CAACG,UAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as ReactBootstrap from \"react-bootstrap\";\n\nconst Orders_URL = \"http://localhost:3001/orders\";\n\nclass DrugDetail extends Component {\n  state = {\n    orders: this.props.orders,\n    order_type_cost: \"0\",\n    cost: parseInt(this.state.order_type_cost)\n  };\n\n  makeOrder = () => {\n    console.log(\"click\");\n    const newOrder = {\n      user: this.props.user,\n      drug: this.props.drug,\n      order_type: this.state.order_type_cost,\n      cost: parseInt(this.state.order_type_cost)\n      // *this data is what gooes to DB, need to get the data from frontend to populate\n    };\n  };\n\n  handleOrder = e => {\n    this.setState({ order_type_cost: e.currentTarget.innerText });\n    // debugger;\n  };\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    if (!this.props.drug) {\n      return (\n        <ReactBootstrap.Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </ReactBootstrap.Spinner>\n      );\n    }\n\n    return (\n      <div>\n        <p>{this.props.drug.name}</p>\n        <ReactBootstrap.Dropdown>\n          <ReactBootstrap.Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Order Type\n          </ReactBootstrap.Dropdown.Toggle>\n\n          <ReactBootstrap.Dropdown.Menu>\n            <ReactBootstrap.Dropdown.Item\n              onClick={this.handleOrder}\n              href=\"#/action-1\"\n            >\n              One Time for $5\n            </ReactBootstrap.Dropdown.Item>\n            <ReactBootstrap.Dropdown.Item href=\"#/action-2\">\n              Subscription for $10\n            </ReactBootstrap.Dropdown.Item>\n          </ReactBootstrap.Dropdown.Menu>\n        </ReactBootstrap.Dropdown>\n        <ReactBootstrap.Button variant=\"primary\">\n          Confirm Order\n        </ReactBootstrap.Button>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DrugDetail);\n"]},"metadata":{},"sourceType":"module"}